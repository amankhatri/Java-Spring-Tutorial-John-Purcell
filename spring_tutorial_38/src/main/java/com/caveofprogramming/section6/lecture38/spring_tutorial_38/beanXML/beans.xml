<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 5) Added property place holder by going into context tab and right clicking the beans.  -->
	<context:property-placeholder
		location="com/caveofprogramming/section6/lecture38/spring_tutorial_38/properties/jdbc.properties" />
	<!--  4) add component scan for bean definitions  -->
	
	<context:component-scan
		base-package="com.caveofprogramming.section6.lecture38.spring_tutorial_38">
	</context:component-scan>
	
	<!-- 6) adding datasource bean. Just to emphasize here, propertname as to match the api documentation like for
	property of driverClassName, we have a corresponding setDriverClassName method, this is important because we will
	use autowiring -->
	
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
	<property name="driverClassName"
		value="${jdbc.datasource.driver-class-name}">
	</property>
	<property name="url" value="${jdbc.datasource.url}"></property>
	<property name="password" value="${jdbc.datasource.password}"></property>
	<property name="username" value="${jdbc.datasource.username}"></property>
	</bean>
	
		<!-- 7) Look into pom.xml -->
	
</beans>
